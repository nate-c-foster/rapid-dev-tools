{
  "custom": {},
  "params": {},
  "permissions": {
    "securityLevels": [
      {
        "children": [],
        "name": "Authenticated"
      }
    ],
    "type": "AllOf"
  },
  "props": {},
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "children": [
                  {
                    "meta": {
                      "name": "EmbeddedView_Generate"
                    },
                    "propConfig": {
                      "props.params.registeredFunctions": {
                        "binding": {
                          "config": {
                            "fallbackDelay": 2.5,
                            "mode": "expression",
                            "tagPath": "{session.custom.tagProvider} + \u0027RapidDev/View Editor/Generate Functions\u0027"
                          },
                          "transforms": [
                            {
                              "code": "\n\tdef orderKey(function):\n\t\treturn function[\u0027order\u0027]\n\n\n\tregisteredFunctions \u003d []\n\tregisteredFunction \u003d {}\n\tfor row in range(value.getRowCount()):\n\t\n\t\tkwargsStr \u003d value.getValueAt(row,\"kwargs\").strip(\u0027{} \u0027)\n\t\tkwargsNames \u003d kwargsStr.split(\u0027,\u0027)\n\t\tkwargsOrder \u003d {}\n\t\tfor i, kwargName in enumerate(kwargsNames):\n\t\t\tname \u003d kwargName.split(\u0027:\u0027)[0]\n\t\t\tname \u003d name.strip(\u0027\" \u0027)\n\t\t\tkwargsOrder[name] \u003d i+1\n\t\t\t\n\t\n\t\tregisteredFunction \u003d {\t\"name\": value.getValueAt(row,\"name\"),\n\t\t\t\t\t\t\t\t\"functionPath\": value.getValueAt(row,\"functionPath\"),\n\t\t\t\t\t\t\t\t\"dockPaths\": system.util.jsonDecode(value.getValueAt(row,\"dockPaths\")),\n\t\t\t\t\t\t\t\t\"dropdownPaths\": system.util.jsonDecode(value.getValueAt(row,\"dropdownPaths\")),\n\t\t\t\t\t\t\t\t\"kwargs\": system.util.jsonDecode(value.getValueAt(row,\"kwargs\")),\n\t\t\t\t\t\t\t\t\"description\" : system.util.jsonDecode(value.getValueAt(row,\"description\")),\n\t\t\t\t\t\t\t\t\"order\" : value.getValueAt(row,\"order\"),\n\t\t\t\t\t\t\t\t\"kwargsOrder\": kwargsOrder\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\tregisteredFunctions.append(registeredFunction)\n\t\t\n\tregisteredFunctions.sort(key\u003dorderKey)\n\t\t\n\treturn registeredFunctions",
                              "type": "script"
                            }
                          ],
                          "type": "tag"
                        }
                      },
                      "props.params.tagPath": {
                        "binding": {
                          "config": {
                            "expression": "{session.custom.tagProvider} + \u0027RapidDev/View Editor/Generate Functions\u0027"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "selectedFunctions": [],
                        "type": "Generate"
                      },
                      "path": "Global Components/Functions/Select Function",
                      "style": {
                        "overflow": "auto"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "EmbeddedView_Filter"
                    },
                    "position": {
                      "tabIndex": 1
                    },
                    "propConfig": {
                      "props.params.registeredFunctions": {
                        "binding": {
                          "config": {
                            "fallbackDelay": 2.5,
                            "mode": "expression",
                            "tagPath": "{session.custom.tagProvider} + \u0027RapidDev/View Editor/Filter Functions\u0027"
                          },
                          "transforms": [
                            {
                              "code": "\t\n\tdef orderKey(function):\n\t\treturn function[\u0027order\u0027]\n\n\n\tregisteredFunctions \u003d []\n\tregisteredFunction \u003d {}\n\tfor row in range(value.getRowCount()):\n\t\n\t\tkwargsStr \u003d value.getValueAt(row,\"kwargs\").strip(\u0027{} \u0027)\n\t\tkwargsNames \u003d kwargsStr.split(\u0027,\u0027)\n\t\tkwargsOrder \u003d {}\n\t\tfor i, kwargName in enumerate(kwargsNames):\n\t\t\tname \u003d kwargName.split(\u0027:\u0027)[0]\n\t\t\tname \u003d name.strip(\u0027\" \u0027)\n\t\t\tkwargsOrder[name] \u003d i+1\n\t\t\t\n\t\n\t\tregisteredFunction \u003d {\t\"name\": value.getValueAt(row,\"name\"),\n\t\t\t\t\t\t\t\t\"functionPath\": value.getValueAt(row,\"functionPath\"),\n\t\t\t\t\t\t\t\t\"dockPaths\": system.util.jsonDecode(value.getValueAt(row,\"dockPaths\")),\n\t\t\t\t\t\t\t\t\"dropdownPaths\": system.util.jsonDecode(value.getValueAt(row,\"dropdownPaths\")),\n\t\t\t\t\t\t\t\t\"kwargs\": system.util.jsonDecode(value.getValueAt(row,\"kwargs\")),\n\t\t\t\t\t\t\t\t\"description\" : system.util.jsonDecode(value.getValueAt(row,\"description\")),\n\t\t\t\t\t\t\t\t\"order\" : value.getValueAt(row,\"order\"),\n\t\t\t\t\t\t\t\t\"kwargsOrder\": kwargsOrder\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\tregisteredFunctions.append(registeredFunction)\n\t\t\n\tregisteredFunctions.sort(key\u003dorderKey)\n\t\t\n\treturn registeredFunctions",
                              "type": "script"
                            }
                          ],
                          "type": "tag"
                        }
                      },
                      "props.params.tagPath": {
                        "binding": {
                          "config": {
                            "expression": "{session.custom.tagProvider} + \u0027RapidDev/View Editor/Filter Functions\u0027"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "selectedFunctions": [],
                        "type": "Filter"
                      },
                      "path": "Global Components/Functions/Select Function",
                      "style": {
                        "overflow": "auto"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "EmbeddedView_Transform"
                    },
                    "position": {
                      "tabIndex": 2
                    },
                    "propConfig": {
                      "props.params.registeredFunctions": {
                        "binding": {
                          "config": {
                            "fallbackDelay": 2.5,
                            "mode": "expression",
                            "tagPath": "{session.custom.tagProvider} + \u0027RapidDev/View Editor/Transform Functions\u0027"
                          },
                          "transforms": [
                            {
                              "code": "\n\tdef orderKey(function):\n\t\treturn function[\u0027order\u0027]\n\n\n\tregisteredFunctions \u003d []\n\tregisteredFunction \u003d {}\n\tfor row in range(value.getRowCount()):\n\t\n\t\tkwargsStr \u003d value.getValueAt(row,\"kwargs\").strip(\u0027{} \u0027)\n\t\tkwargsNames \u003d kwargsStr.split(\u0027,\u0027)\n\t\tkwargsOrder \u003d {}\n\t\tfor i, kwargName in enumerate(kwargsNames):\n\t\t\tname \u003d kwargName.split(\u0027:\u0027)[0]\n\t\t\tname \u003d name.strip(\u0027\" \u0027)\n\t\t\tkwargsOrder[name] \u003d i+1\n\t\t\t\n\t\n\t\tregisteredFunction \u003d {\t\"name\": value.getValueAt(row,\"name\"),\n\t\t\t\t\t\t\t\t\"functionPath\": value.getValueAt(row,\"functionPath\"),\n\t\t\t\t\t\t\t\t\"dockPaths\": system.util.jsonDecode(value.getValueAt(row,\"dockPaths\")),\n\t\t\t\t\t\t\t\t\"dropdownPaths\": system.util.jsonDecode(value.getValueAt(row,\"dropdownPaths\")),\n\t\t\t\t\t\t\t\t\"kwargs\": system.util.jsonDecode(value.getValueAt(row,\"kwargs\")),\n\t\t\t\t\t\t\t\t\"description\" : system.util.jsonDecode(value.getValueAt(row,\"description\")),\n\t\t\t\t\t\t\t\t\"order\" : value.getValueAt(row,\"order\"),\n\t\t\t\t\t\t\t\t\"kwargsOrder\": kwargsOrder\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\tregisteredFunctions.append(registeredFunction)\n\t\t\n\tregisteredFunctions.sort(key\u003dorderKey)\n\t\t\n\treturn registeredFunctions",
                              "type": "script"
                            }
                          ],
                          "type": "tag"
                        }
                      },
                      "props.params.tagPath": {
                        "binding": {
                          "config": {
                            "expression": "{session.custom.tagProvider} + \u0027RapidDev/View Editor/Transform Functions\u0027"
                          },
                          "type": "expr"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "selectedFunctions": [],
                        "type": "Transform"
                      },
                      "path": "Global Components/Functions/Select Function",
                      "style": {
                        "overflow": "auto"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "TabContainer"
                },
                "position": {
                  "position": "bottom"
                },
                "props": {
                  "menuType": "modern",
                  "style": {
                    "marginTop": "10px"
                  },
                  "tabSize": {
                    "width": 120
                  },
                  "tabs": [
                    "Generate",
                    "Filter",
                    "Transform"
                  ]
                },
                "type": "ia.container.tab"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "total"
                        },
                        "position": {
                          "basis": "200px"
                        },
                        "propConfig": {
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": ".../Table.props.data"
                              },
                              "transforms": [
                                {
                                  "code": "\treturn \"Number of Views: \" + str(len(value))",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "color": "var(--neutral-70)",
                            "fontSize": "14px",
                            "padding": "5px",
                            "textAlign": "left"
                          }
                        },
                        "type": "ia.display.label"
                      },
                      {
                        "meta": {
                          "name": "Label"
                        },
                        "position": {
                          "basis": "300px",
                          "grow": 1
                        },
                        "props": {
                          "style": {
                            "color": "var(--neutral-70)",
                            "fontSize": "18px"
                          },
                          "text": "Preview"
                        },
                        "type": "ia.display.label"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onClick": {
                                  "config": {
                                    "script": "\t\n\tselectedRow \u003d self.parent.parent.parent.getChild(\"Table\").props.selection.selectedRow\n\n\tdel self.parent.parent.parent.getChild(\"Table\").props.data[selectedRow]\n"
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon_Clear",
                              "tooltip": {
                                "enabled": true,
                                "text": "Clear"
                              }
                            },
                            "position": {
                              "basis": "25px"
                            },
                            "propConfig": {
                              "custom.enabled": {
                                "binding": {
                                  "config": {
                                    "path": "..../Table.props.selection.selectedRow"
                                  },
                                  "transforms": [
                                    {
                                      "code": "\tif isinstance(value,long):\n\t\treturn True\n\telse:\n\t\treturn False",
                                      "type": "script"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "this.custom.enabled"
                                  },
                                  "transforms": [
                                    {
                                      "code": "\tif value:\n\t\treturn \u0027var(--enabled-Icon)\u0027\n\telse:\n\t\treturn \u0027var(--disabled-Icon)\u0027",
                                      "type": "script"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "path": "material/clear",
                              "style": {
                                "cursor": "pointer",
                                "marginRight": "5px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "events": {
                              "dom": {
                                "onClick": {
                                  "config": {
                                    "script": "\t\n\tself.parent.parent.parent.parent.getChild(\"Table\").UpdateTable()\n"
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon_Refresh",
                              "tooltip": {
                                "enabled": true,
                                "text": "Refresh"
                              }
                            },
                            "position": {
                              "basis": "25px"
                            },
                            "props": {
                              "color": "var(--enabled-Icon)",
                              "path": "material/refresh",
                              "style": {
                                "cursor": "pointer",
                                "marginRight": "7px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "events": {
                              "dom": {
                                "onClick": {
                                  "config": {
                                    "script": "\t\n\tviews \u003d self.parent.parent.parent.getChild(\"Table\").props.data\n\t\n\tvieweditor.util.generateViewImport(views)"
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon_Update",
                              "tooltip": {
                                "enabled": true,
                                "text": "Download view import"
                              }
                            },
                            "position": {
                              "basis": "25px"
                            },
                            "props": {
                              "color": "var(--enabled-Icon)",
                              "path": "material/system_update_alt",
                              "style": {
                                "cursor": "pointer",
                                "marginRight": "5px"
                              }
                            },
                            "type": "ia.display.icon"
                          }
                        ],
                        "meta": {
                          "name": "FlexContainer"
                        },
                        "position": {
                          "basis": "200px"
                        },
                        "props": {
                          "justify": "flex-end"
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "FlexContainer"
                    },
                    "position": {
                      "basis": "30px",
                      "shrink": 0
                    },
                    "props": {
                      "style": {
                        "classes": "RapidDev/Table/Title"
                      }
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "meta": {
                      "name": "Table"
                    },
                    "position": {
                      "basis": "400px",
                      "grow": 1
                    },
                    "props": {
                      "cells": {
                        "style": {
                          "color": "var(--neutral-70)"
                        }
                      },
                      "columns": [
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY",
                          "editable": true,
                          "field": "viewPath",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": ""
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "viewPath"
                          },
                          "justify": "left",
                          "number": "value",
                          "numberFormat": "0,0.##",
                          "progressBar": {
                            "bar": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "max": 100,
                            "min": 0,
                            "track": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "value": {
                              "enabled": true,
                              "format": "0,0.##",
                              "justify": "center",
                              "style": {
                                "classes": ""
                              }
                            }
                          },
                          "render": "string",
                          "resizable": true,
                          "sort": "none",
                          "sortable": true,
                          "strictWidth": false,
                          "style": {
                            "classes": "",
                            "paddingLeft": "5px"
                          },
                          "toggleSwitch": {
                            "color": {
                              "selected": "",
                              "unselected": ""
                            }
                          },
                          "viewParams": {},
                          "viewPath": "",
                          "visible": true,
                          "width": 4
                        },
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY",
                          "editable": false,
                          "field": "currentValues",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": ""
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "currentValues"
                          },
                          "justify": "left",
                          "number": "value",
                          "numberFormat": "0,0.##",
                          "progressBar": {
                            "bar": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "max": 100,
                            "min": 0,
                            "track": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "value": {
                              "enabled": true,
                              "format": "0,0.##",
                              "justify": "center",
                              "style": {
                                "classes": ""
                              }
                            }
                          },
                          "render": "view",
                          "resizable": true,
                          "sort": "none",
                          "sortable": false,
                          "strictWidth": false,
                          "style": {
                            "classes": ""
                          },
                          "toggleSwitch": {
                            "color": {
                              "selected": "",
                              "unselected": ""
                            }
                          },
                          "viewParams": {},
                          "viewPath": "Global Components/Table/Value List",
                          "visible": true,
                          "width": 2
                        },
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY",
                          "editable": false,
                          "field": "updatedValues",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": ""
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "updatedValues"
                          },
                          "justify": "left",
                          "number": "value",
                          "numberFormat": "0,0.##",
                          "progressBar": {
                            "bar": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "max": 100,
                            "min": 0,
                            "track": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "value": {
                              "enabled": true,
                              "format": "0,0.##",
                              "justify": "center",
                              "style": {
                                "classes": ""
                              }
                            }
                          },
                          "render": "view",
                          "resizable": true,
                          "sort": "none",
                          "sortable": false,
                          "strictWidth": false,
                          "style": {
                            "classes": ""
                          },
                          "toggleSwitch": {
                            "color": {
                              "selected": "",
                              "unselected": ""
                            }
                          },
                          "viewParams": {},
                          "viewPath": "Global Components/Table/Value List",
                          "visible": true,
                          "width": 2
                        },
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY",
                          "editable": false,
                          "field": "viewJSON",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": ""
                          },
                          "header": {
                            "align": "center",
                            "justify": "center",
                            "style": {
                              "classes": ""
                            },
                            "title": "viewJSON"
                          },
                          "justify": "center",
                          "number": "value",
                          "numberFormat": "0,0.##",
                          "progressBar": {
                            "bar": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "max": 100,
                            "min": 0,
                            "track": {
                              "color": "",
                              "style": {
                                "classes": ""
                              }
                            },
                            "value": {
                              "enabled": true,
                              "format": "0,0.##",
                              "justify": "center",
                              "style": {
                                "classes": ""
                              }
                            }
                          },
                          "render": "view",
                          "resizable": true,
                          "sort": "none",
                          "sortable": false,
                          "strictWidth": false,
                          "style": {
                            "classes": ""
                          },
                          "toggleSwitch": {
                            "color": {
                              "selected": "",
                              "unselected": ""
                            }
                          },
                          "viewParams": {},
                          "viewPath": "View Editor/Components/JSON Table Button",
                          "visible": true,
                          "width": 1
                        }
                      ],
                      "headerStyle": {
                        "color": "var(--blue-85)"
                      },
                      "pager": {
                        "initialOption": 100,
                        "options": [
                          100,
                          500,
                          1000,
                          50,
                          100
                        ],
                        "style": {
                          "backgroundColor": "var(--tableTitle-background)"
                        }
                      },
                      "rows": {
                        "striped": {
                          "enabled": false
                        }
                      },
                      "style": {
                        "borderBottomColor": "var(--neutral-30)",
                        "borderBottomStyle": "solid",
                        "borderBottomWidth": "1px",
                        "borderLeftStyle": "none",
                        "borderRightStyle": "none",
                        "borderTopStyle": "none",
                        "marginBottom": "30px",
                        "padding": "0px"
                      }
                    },
                    "type": "ia.display.table"
                  }
                ],
                "meta": {
                  "name": "Table"
                },
                "position": {
                  "position": "top"
                },
                "props": {
                  "direction": "column",
                  "style": {
                    "overflow": "visible"
                  }
                },
                "scripts": {
                  "customMethods": [
                    {
                      "name": "UpdateTable",
                      "params": [],
                      "script": "\n\t\n\tdef composeFilters(f,g):\n\t\treturn lambda x : f(x) and g(x)\n\t\t\n\tdef composeTransforms(f,g):\n\t\treturn lambda x : g(f(x))\n\t\n\t\n\tviews \u003d []\t\n\t\n\t\n\t# ----------------- Generate Views -------------------------------------------------------------------------\n\tgenerators \u003d self.parent.getChild(\"TabContainer\").getChild(\"EmbeddedView_Generate\").props.params.selectedFunctions\n\n\tfor generator in generators:\n\n\t\tif len(generator) \u003e 0:\n\t\t\tgeneratorPath \u003d generator[\u0027functionPath\u0027]\n\t\t\tkwargs \u003d generator[\u0027kwargs\u0027]\n\t\t\t\n\t\t\tprint generatorPath\n\t\t\tprint kwargs\n\t\t\n\t\t\tviews \u003d views + eval(generatorPath)(**kwargs)\n\t\n\t\n\t\n\t\n\t# ----------------- Filter Views ----------------------------------------------------------------------------------\n\tfilters \u003d self.parent.getChild(\"TabContainer\").getChild(\"EmbeddedView_Filter\").props.params.selectedFunctions\n\t\n\tappliedFilters \u003d []\n\n\tfor filterFunction in filters:\n\t\n\t\tif len(filterFunction) \u003e 0:\n\t\n\t\t\tfilterPath \u003d filterFunction[\u0027functionPath\u0027]\n\t\t\tkwargs \u003d filterFunction[\u0027kwargs\u0027]\n\t\t\t\n\t\t\tappliedFilters.append(eval(filterPath)(**kwargs))\n\t\t\t\n\t\t\tprint filterPath\n\t\t\tprint kwargs\n\t\t\n\t\n\tif len(appliedFilters) \u003e 0:\n\t\tcomposedFilters \u003d reduce(composeFilters,appliedFilters, lambda x : x)\n\t\tviews \u003d filter(composedFilters,views)\n\n\n\t\n\t\n\t\n\t\n\t\n\tfor view in views:\n\t\tview[\u0027currentValues\u0027] \u003d []\n\t\tview[\u0027updatedValues\u0027] \u003d []\n\t\n\t\n\t# ------------------ Transform Views --------------------------------------------------------------------------------\n\ttransforms \u003d self.parent.getChild(\"TabContainer\").getChild(\"EmbeddedView_Transform\").props.params.selectedFunctions\n\t\n\tappliedTransforms \u003d []\n\n\tfor transform in transforms:\n\t\n\t\tif len(transform) \u003e 0:\n\t\n\t\t\ttransformPath \u003d transform[\u0027functionPath\u0027]\n\t\t\tkwargs \u003d transform[\u0027kwargs\u0027]\n\t\t\n\t\t\tprint transformPath\n\t\t\tprint kwargs\n\t\t\n\t\t\tappliedTransforms.append(eval(transformPath)(**kwargs))\n\t\t\n\t\t\n\t\t\t#views \u003d map(eval(transformPath)(**kwargs),views)\n\t\t\n\tif len(appliedTransforms) \u003e 0:\n\t\tcomposedTransforms \u003d reduce(composeTransforms,appliedTransforms, lambda x : x)\n\t\tviews \u003d map(composedTransforms,views)\t\t\n\t\n\t\n\tself.getChild(\"Table\").props.data \u003d views\n"
                    }
                  ],
                  "extensionFunctions": null,
                  "messageHandlers": [
                    {
                      "messageType": "UpdateFunctionTable",
                      "pageScope": true,
                      "script": "\t# implement your handler here\n\t\n\tself.UpdateTable()",
                      "sessionScope": false,
                      "viewScope": false
                    }
                  ]
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "SplitContainer"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "orientation": "vertical"
            },
            "type": "ia.container.split"
          }
        ],
        "meta": {
          "name": "Functional View Editor"
        },
        "props": {
          "direction": "column",
          "style": {
            "overflow": "visible",
            "padding": "20px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "SelectOperation"
                },
                "position": {
                  "basis": "320px"
                },
                "props": {
                  "params": {
                    "label": "Operation",
                    "options": [
                      {
                        "label": "Create Views",
                        "value": "Create Views"
                      },
                      {
                        "label": "Move Views",
                        "value": "Move Views"
                      },
                      {
                        "label": "Rename Views",
                        "value": "Rename Views"
                      }
                    ],
                    "value": ""
                  },
                  "path": "Global Components/Forms/Label Dropdown Item",
                  "style": {
                    "height": "40px",
                    "margin": "auto 20px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Header"
            },
            "position": {
              "basis": "100px",
              "shrink": 0
            },
            "type": "ia.container.flex"
          },
          {
            "custom": {
              "default": {
                "createViews": [
                  {
                    "Parameters": {
                      "LocationID": 70
                    },
                    "TemplatePath": "SCADA/AWS Templates/View Templates/General Process",
                    "ViewPath": "SCADA/JBLM/Water System/Distribution/High Service"
                  },
                  {
                    "Parameters": {
                      "LocationID": 71
                    },
                    "TemplatePath": "SCADA/AWS Templates/View Templates/General Process",
                    "ViewPath": "SCADA/JBLM/Water System/Distribution/Low Service"
                  }
                ],
                "moveViews": [
                  {
                    "Destination": "SCADA/JBLM/Water System/Reservoirs",
                    "Source": "SCADA/JBLM/Water System/Distribution/High Service"
                  },
                  {
                    "Destination": "SCADA/JBLM/Water System/Reservoirs",
                    "Source": "SCADA/JBLM/Water System/Distribution/Low Service"
                  }
                ],
                "renameViews": [
                  {
                    "NewName": "High Service Zone",
                    "Path": "SCADA/JBLM/Water System/Reservoirs/High Service"
                  },
                  {
                    "NewName": "Low Service Zone",
                    "Path": "SCADA/JBLM/Water System/Reservoirs/Low Service"
                  }
                ]
              }
            },
            "meta": {
              "name": "EmbeddedView"
            },
            "position": {
              "basis": "320px",
              "grow": 1
            },
            "propConfig": {
              "custom.type": {
                "binding": {
                  "config": {
                    "path": "../Header/SelectOperation.props.params.value"
                  },
                  "type": "property"
                }
              },
              "props.params.columns": {
                "binding": {
                  "config": {
                    "path": "this.props.params.type"
                  },
                  "transforms": [
                    {
                      "code": "\t\n\tprops \u003d []\n\tif value \u003d\u003d \"Create Views\":\n\t\tprops \u003d [\t{\u0027header\u0027: \u0027ViewPath\u0027, \u0027editable\u0027: True, \u0027render\u0027: \u0027string\u0027, \u0027width\u0027:2 },\n\t\t\t\t\t{\u0027header\u0027: \u0027TemplatePath\u0027, \u0027editable\u0027: True, \u0027render\u0027: \u0027string\u0027, \u0027width\u0027: 2},\n\t\t\t\t\t{\u0027header\u0027: \u0027Parameters\u0027, \u0027editable\u0027: False, \u0027render\u0027: \u0027view\u0027, \u0027width\u0027:2}\n\t\t\t\t]\n\telif value \u003d\u003d \"Move Views\":\n\t\tprops \u003d [\t{\u0027header\u0027: \u0027Source\u0027, \u0027editable\u0027: True, \u0027render\u0027: \u0027string\u0027, \u0027width\u0027:2 },\n\t\t\t\t\t{\u0027header\u0027: \u0027Destination\u0027, \u0027editable\u0027: True, \u0027render\u0027: \u0027string\u0027, \u0027width\u0027: 2}\n\t\t\t\t]\n\telif value \u003d\u003d \"Rename Views\":\n\t\t\tprops \u003d [\t{\u0027header\u0027: \u0027Path\u0027, \u0027editable\u0027: True, \u0027render\u0027: \u0027string\u0027, \u0027width\u0027:2 },\n\t\t\t\t\t\t{\u0027header\u0027: \u0027NewName\u0027, \u0027editable\u0027: True, \u0027render\u0027: \u0027string\u0027, \u0027width\u0027: 1}\n\t\t\t\t\t]\n\t\t\t\t\t\t\n\t\n\tcolumns \u003d []\n\tfor prop in props:\n\t\n\t\tcolumn \u003d   {\n\t\t    \"align\": \"center\",\n\t\t    \"boolean\": \"checkbox\",\n\t\t    \"dateFormat\": \"MM/DD/YYYY\",\n\t\t    \"editable\": prop[\u0027editable\u0027],\n\t\t    \"field\": prop[\u0027header\u0027],\n\t\t    \"footer\": {\n\t\t      \"align\": \"center\",\n\t\t      \"justify\": \"left\",\n\t\t      \"style\": {\n\t\t        \"classes\": \"\"\n\t\t      },\n\t\t      \"title\": \"\"\n\t\t    },\n\t\t    \"header\": {\n\t\t      \"align\": \"center\",\n\t\t      \"justify\": \"left\",\n\t\t      \"style\": {\n\t\t        \"classes\": \"\"\n\t\t      },\n\t\t      \"title\": prop[\u0027header\u0027]\n\t\t    },\n\t\t    \"justify\": \"left\",\n\t\t    \"number\": \"value\",\n\t\t    \"numberFormat\": \"0,0.##\",\n\t\t    \"progressBar\": {\n\t\t      \"bar\": {\n\t\t        \"color\": \"\",\n\t\t        \"style\": {\n\t\t          \"classes\": \"\"\n\t\t        }\n\t\t      },\n\t\t      \"max\": 100,\n\t\t      \"min\": 0,\n\t\t      \"track\": {\n\t\t        \"color\": \"\",\n\t\t        \"style\": {\n\t\t          \"classes\": \"\"\n\t\t        }\n\t\t      },\n\t\t      \"value\": {\n\t\t        \"enabled\": True,\n\t\t        \"format\": \"0,0.##\",\n\t\t        \"justify\": \"center\",\n\t\t        \"style\": {\n\t\t          \"classes\": \"\"\n\t\t        }\n\t\t      }\n\t\t    },\n\t\t    \"render\": prop[\u0027render\u0027],\n\t\t    \"resizable\": True,\n\t\t    \"sort\": \"none\",\n\t\t    \"sortable\": False,\n\t\t    \"strictWidth\": False,\n\t\t    \"style\": {\n\t\t      \"classes\": \"\",\n\t\t      \"paddingLeft\": \"5px\"\n\t\t    },\n\t\t    \"toggleSwitch\": {\n\t\t      \"color\": {\n\t\t        \"selected\": \"\",\n\t\t        \"unselected\": \"\"\n\t\t      }\n\t\t    },\n\t\t    \"viewParams\": {},\n\t\t    \"viewPath\": \"\",\n\t\t    \"visible\": True,\n\t\t    \"width\": prop[\u0027width\u0027]\n\t\t  }\n\t\t  \n\t\tif prop[\u0027header\u0027] \u003d\u003d \u0027Parameters\u0027:\n\t\t\tcolumn[\u0027viewPath\u0027]\u003d \"Global Components/Table/Parameter List\"\n\t\t\t\n\t\tcolumns.append(column)\n\t\t  \n\t\t  \n\treturn columns\n\t\n\t",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.params.default": {
                "binding": {
                  "config": {
                    "path": "this.props.params.type"
                  },
                  "transforms": [
                    {
                      "code": "\tif value \u003d\u003d \"Create Views\":\n\t\treturn self.custom.default.createViews\n\telif value \u003d\u003d \"Move Views\":\n\t\treturn self.custom.default.moveViews\n\telif value \u003d\u003d \"Rename Views\":\n\t\treturn self.custom.default.renameViews",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.params.title": {
                "binding": {
                  "config": {
                    "path": "this.props.params.type"
                  },
                  "type": "property"
                }
              },
              "props.params.type": {
                "binding": {
                  "config": {
                    "path": "this.custom.type"
                  },
                  "type": "property"
                }
              },
              "props.params.updateFunction": {
                "binding": {
                  "config": {
                    "path": "this.props.params.type"
                  },
                  "transforms": [
                    {
                      "code": "\t\n\tif value \u003d\u003d \"Create Views\":\n\t\treturn \u0027vieweditor.bulk.bulkCreateViews\u0027\n\telif value \u003d\u003d \"Move Views\":\n\t\treturn \u0027vieweditor.bulk.bulkMoveViews\u0027\n\telif value \u003d\u003d \"Rename Views\":\n\t\treturn \u0027vieweditor.bulk.bulkRenameViews\u0027",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "path": "Global Components/Table/Bulk Configure Table",
              "style": {
                "margin": "0px 20px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Bulk View Editor"
        },
        "position": {
          "tabIndex": 1
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "menuType": "modern",
      "style": {
        "padding": "20px"
      },
      "tabSize": {
        "width": 250
      },
      "tabStyle": {
        "active": {
          "color": ""
        },
        "inactive": {
          "fontSize": ""
        }
      },
      "tabs": [
        "Functional View Editor",
        "Bulk View Editor"
      ]
    },
    "type": "ia.container.tab"
  }
}